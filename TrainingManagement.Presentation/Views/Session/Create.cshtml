@using TrainingManagment.Domain.Models.Enums;
@using TrainingManagment.Repository.Repositories;
@model Session


@inject LookupRepository lookup;
 

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Session Management</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
    <form id="session-entry-form">

        <div class="border p-3 mt-4">
            <div class="row pb-2">
                <h2 class="text-primary">
                    Create Session
                </h2>
                <hr />
            </div>
            <div class="row">

                <div class="mb-6">
                    <label for="Year">Year:</label>
                    <select asp-for="Year" id="year" name="selectedCode" onchange="disableSelect(this);">
                        <option value="">Select Year</option>
                        @foreach (var item in lookup.GetAllYear())
                        {
                            <option value="@item.NameEn">@item.NameEn</option>
                        }
                    </select>
                </div>

                <script>
                    function disableSelect(select) {
                        select.disabled = true;
                    }
                </script>
                       
                    <br />
                    <hr />
                <div class="col-md-6">

                    <div class="mb-3">
                        <input type="hidden" id="edit-id" value="-1">
                        <label for="traineeName">Trainee Name:</label>
                        <input type="text" id="traineeName" name="traineeName" required>
                    </div>
                    <div class="mb-3">
                        <label for="trainerName">Trainer Name:</label>
                        <select asp-for="TrainerName" id="trainerName" name="selectedCode">
                            <option value="">Select Trainer</option>
                            @foreach (var item in lookup.GetAllTrainer())
                            {
                                <option value="@item.Id">@item.NameEn</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="topic">Training Topic:</label>
                        <select asp-for="TrainingTopic" id="topic" name="selectedCode">
                            <option value="">Select Topic</option>
                            @foreach (var item in lookup.GetAllTopics())
                            {
                                <option value="@item.Id" data-topic-name="@item.NameEn">@item.NameEn</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3 form-select">
                        <label for="type">Training Type:</label>
                        <select asp-for="TrainingType" id="type" name="selectedCode">
                            <option value="">Select Type</option>
                            @foreach (var item in lookup.GetAllTypes())
                            {
                                <option value="@item.Id">@item.NameEn</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="startDate">Start Date:</label>
                        <input type="date" id="startDate" name="startDate"  min="@DateTime.Now.ToString("yyyy-MM-dd")" required>
                    </div>
                    <div class="mb-3">
                        <label for="endDate">End Date:</label>
                        <input type="date" id="endDate" name="endDate" min="@DateTime.Now.ToString("yyyy-MM-dd")" required>
                    </div>
                </div>
                <div class="col text-center">
                    <button type="button" id="preview-button" class="btn btn-outline-secondary">Add</button>
                </div>
            </div>
        </div>
    </form>
    <br />
    <hr />
    <table id="session-table" class="table table-bordered">
        <thead>
            <tr>
                <th>Trainee Name</th>
                <th>Trainer Name</th>
                <th>Topic</th>
                <th>Type</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
 
        </tbody>
    </table>
    <div class="col text-center">
        <button type="button" id="insert-button" class="btn btn-primary">Save</button>
        <button type="button" id="" class="btn btn-secondery">Close</button>

    </div>

    <script>
        $(document).ready(function () {
            var editingRow = null;


            function areInputFieldsEmpty() {
                return (
                    $("#traineeName").val() === '' ||
                    $("#trainerName").val() === '' ||
                    $("#topic").val() === '' ||
                    $("#type").val() === '' ||
                    $("#startDate").val() === '' ||
                    $("#endDate").val() === ''
                );
            }


            function getSelectedTopicName(selectedValue) {
                var selectedOption = $("#topic option[value='" + selectedValue + "']");
                return selectedOption.data("topic-name") || "Unknown";
            }


            var selectedValue = $("#topic").val(); 

            var selectedTopicName = getSelectedTopicName(selectedValue);

            $("#preview-button").click(function () {
                if (areInputFieldsEmpty()) {
                    alert("Please fill in all fields before adding a row.");
                    return;
                }


                var traineeName = $("#traineeName").val();
                var selectedTrainer = $("#trainerName option:selected");
                var selectedTopic = $("#topic option:selected");
                var selectedType = $("#type option:selected");
                var startDate = $("#startDate").val();
                var endDate = $("#endDate").val();
                var editId = $("#edit-id").val();


                var trainer = {
                    Id: selectedTrainer.val(),
                    Name: selectedTrainer.text()
                };

                var topic = {
                    Id: selectedTopic.val(),
                    Name: selectedTopic.text()
                };

                var type = {
                    Id: selectedType.val(),
                    Name: selectedType.text()
                };

                if (editId === "-1") {
                    // Add new session
                    var newRow = '<tr>' +
                        '<td>' + traineeName + '</td>' +
                        '<td data-trainer-id="' + trainer.Id + '">' + trainer.Name + '</td>' +
                        '<td data-topic-id="' + topic.Id + '">' + topic.Name + '</td>' +
                        '<td data-type-id="' + type.Id + '">' + type.Name + '</td>' +
                        '<td>' + startDate + '</td>' +
                        '<td>' + endDate + '</td>' +
                        '<td>' +
                        '<button class="edit-row-button">Edit</button> ' +
                        '<button class="delete-row-button">Delete</button>' +
                        '</td>' +
                        '</tr>';
                    $("#session-table tbody").append(newRow);
                } else {
                    // Edit existing session
                    var editingRow = $("#session-table tbody tr").eq(parseInt(editId));
                    $(editingRow).find("td:eq(0)").text(traineeName);
                    $(editingRow).find("td:eq(1)").data("trainer-id", trainer.Id).text(trainer.Name);
                    $(editingRow).find("td:eq(2)").data("topic-id", topic.Id).text(topic.Name);
                    $(editingRow).find("td:eq(3)").data("type-id", type.Id).text(type.Name);
                    $(editingRow).find("td:eq(4)").text(startDate);
                    $(editingRow).find("td:eq(5)").text(endDate);
                    $("#edit-id").val("-1");
                    $(editingRow).find(".edit-row-button").text("Edit");
                }

                // Clear form
                $("#traineeName").val('');
                $("#trainerName").val('');
                $("#topic").val('');
                $("#type").val('');
                $("#startDate").val('');
                $("#endDate").val('');
            });
            // Delete row
            $("#session-table").on("click", ".delete-row-button", function () {
                $(this).closest("tr").remove();
            });

            // Edit row
            $("#session-table").on("click", ".edit-row-button", function () {
                editingRow = $(this).closest("tr");
                var traineeName = $(editingRow).find("td:eq(0)").text();
                var trainerName = $(editingRow).find("td:eq(1)").data("trainer-id");
                var topicId = $(editingRow).find("td:eq(2)").data("topic-id");
                var typeId = $(editingRow).find("td:eq(3)").data("type-id");
                var startDate = $(editingRow).find("td:eq(4)").text();
                var endDate = $(editingRow).find("td:eq(5)").text();

                // Set values for editing
                $("#traineeName").val(traineeName);
                $("#trainerName").val(trainerName);
                $("#topic").val(topicId);
                $("#type").val(typeId);
                $("#startDate").val(startDate);
                $("#endDate").val(endDate);
                $("#edit-id").val($(editingRow).index());
                $(this).text("Save");
            });

            // Insert session data
            $("#insert-button").click(function () {
                var sessionData = [];
                $("#session-table tbody tr").each(function () {
                    var traineeName = $(this).find("td:eq(0)").text();
                    var trainerName = $(this).find("td:eq(1)").data("trainer-id");
 
                    var topicId = $(this).find("td:eq(2)").data("topic-id");
                    var typeId = $(this).find("td:eq(3)").data("type-id");
                    var startDate = $(this).find("td:eq(4)").text();
                    var endDate = $(this).find("td:eq(5)").text();
                    var year = $("#year").val();

                    sessionData.push({
                        TraineeName: traineeName,
                        TrainerNameId: trainerName,
                        TrainingTopicId: topicId,
                        TrainingTypeId: typeId,
                        StartDate: startDate,
                        ExpectedEndDate: endDate,
                        Year:year

                     });
                });
                //ValueKind = Object : "{"TraineeName":"ahmad","TrainerName":"Zakaria Lafi","TrainingTopicId":3,"TrainingTypeId":1,"StartDate":"2023-09-06","EndDate":"2023-09-13"}"
                // Send session via AJAX
                $.ajax({
                    url: "/Session/Create",
                    method: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(sessionData),
                    success: function (response) {
                        alert(response.message);

                        $("#session-table tbody").empty();
                    },
                    error: function (xhr, status, error) {
                        console.error(xhr, status, error);
                    }
                });
            });
        });
    </script>
</body>
</html>








@section Scripts{
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}


@*<form method="post">
    <div class="border p-3 mt-4">
        <div class="row pb-2">
            <h2 class="text-primary">
                Create Session
            </h2>
            <hr />
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    <label asp-for="Year"></label>
                    @Html.DropDownListFor(model =>
                    model.Year, new SelectList(Enum.GetValues(typeof(LookupEnum.Year))), new { @class = "form-control" })
                    <span asp-validation-for="Year" class="text-danger"></span>
                </div>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    <label asp-for="TraineeName"></label>
                    <input asp-for="TraineeName" class="form-control" />
                    <span asp-validation-for="TraineeName" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="TrainerName"></label>
                    @Html.DropDownListFor(model => 
                        model.TrainerName, new SelectList(Enum.GetValues(typeof(LookupEnum.Trainer))), new { @class = "form-control" })
                    <span asp-validation-for="TrainerName" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="TrainingTopic"></label>
                    @Html.DropDownListFor(model => 
                        model.TrainingTopic, new SelectList(Enum.GetValues(typeof(LookupEnum.TrainingTopics))), new { @class = "form-control" })
                    <span asp-validation-for="TrainingTopic" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-3 form-select">
                    <label asp-for="TrainingType"></label>
                    @Html.DropDownListFor(model => 
                        model.TrainingType, new SelectList(Enum.GetValues(typeof(LookupEnum.enTrainingType))), new { @class = "form-control" })
                    <span asp-validation-for="TrainingType" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="StartDate"></label>
                    <input asp-for="StartDate" class="form-control" type="date" min="@DateTime.Now.ToString("yyyy-MM-dd")" />
                    <span asp-validation-for="StartDate" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="ExpectedEndDate"></label>
                    <input asp-for="ExpectedEndDate" class="form-control" min="@DateTime.Now.ToString("yyyy-MM-dd")" />
                    <span asp-validation-for="ExpectedEndDate" class="text-danger"></span>
                </div>
            </div>
                            @*Should be Moved
            <input asp-for="CreatedBy" type="hidden" class="form-control" value="Malek" />
            <input asp-for="ModifyBy" type="hidden" class="form-control" value="Malek" />
            <input asp-for="CreatedOn" type="hidden" class="form-control" value="@DateTime.Now" />
            <input asp-for="ModifyOn" type="hidden" class="form-control" value="@DateTime.Now" />
            <input asp-for="IsActive" type="hidden" class="form-control" value="@true" />
            <input asp-for="IsDeleted" type="hidden" class="form-control" value="@false" />
            <input asp-for="ActualEndDate" type="hidden" class="form-control" value="@DateTime.Now" />
            <input asp-for="Status" type="hidden" class="form-control" value="@LookupEnum.Status.Active" />
            <input asp-for="Result" type="hidden" class="form-control" value="@LookupEnum.Result.On_Hold" />

        </div>
        <div class="row mt-3">
            <div class="col-md-12">
                <button type="submit" class="btn btn-primary" style="width: 150px;">Add</button>
                <a asp-controller="Session" asp-action="Index" class="btn btn-secondary" style="width: 150px;">Back To List</a>
            </div>
        </div>
    </div>
</form>


<table class="table table-striped">
    <tr>

    </tr>
</table>*@