@model SessionViewModel

@{
    ViewData["Title"] = "Session Management";
}


    <form id="session-entry-form">

        <div class="border p-4 mt-4">
            <!-- Increased padding -->
            <div class="row pb-2">
                <h2 class="text-primary">
                    Create Session
                </h2>
                <hr />
            </div>
            <div class="row">
                <div class="col-md-6 mb-4">
                    <!-- Added margin -->
                    <div class="mb-3">
                        <label for="Year">Year:</label>
                        <select asp-for="Year" id="year" name="selectedCode" onchange="disableSelect(this);" class="form-control">
                            <option value="">Select Year</option>
                            @foreach (var item in Model.YearsList)
                            {
                                <option value="@item.NameEn">@item.NameEn</option>
                            }
                        </select>
                    </div>
                    <script>
                        function disableSelect(select) {
                            select.disabled = true;
                        }
                    </script>

                    <div class="mb-3">
                        <input type="hidden" id="edit-id" value="-1">
                        <label for="traineeName">Trainee Name:</label>
                        <input type="text" id="traineeName" name="traineeName" required class="form-control">
                    </div>
                    <div class="mb-3">
                        <label for="trainerName">Trainer Name:</label>
                        <select asp-for="TrainerName" id="trainerName" name="selectedCode" class="form-control">
                            <option value="">Select Trainer</option>
                            @foreach (var item in Model.TrainersList)
                            {
                                @if (item.IsDeleted != true)
                                {
                                    <option value="@item.Id">@item.NameEn</option>
                                }
                            }
                        </select>
                    </div>
                </div>

                <div class="col-md-6 mb-4">
                    <div class="mb-3 form-select">
                        <label for="type">Training Type:</label>
                        <select asp-for="TrainingType" id="type" name="selectedCode" class="form-control">
                            <option value="">Select Type</option>
                            @foreach (var item in Model.TypesList)
                            {
                                @if (item.IsDeleted != true)
                                {
                                    <option value="@item.Id">@item.NameEn</option>
                                }
                            }
                        </select>
                    </div>

                    <div class="mb-3 form-select">
                        <label for="type">Training Topic:</label>
                        <select asp-for="TrainingTopic" id="topic" name="selectedCode" class="form-control">
                            <option value="">Select Topic</option>
                            @foreach (var item in Model.TopicsList)
                            {
                                @if (item.IsDeleted != true)
                                {
                                    <option value="@item.Id">@item.NameEn</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="startDate">Start Date:</label>
                        <input type="date" id="startDate" name="startDate" min="@DateTime.Now.ToString("yyyy-MM-dd")" required>
                    </div>
                    <div class="mb-3">
                        <label for="endDate">End Date:</label>
                        <input type="date" id="endDate" name="endDate" min="@DateTime.Now.ToString("yyyy-MM-dd")" required>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mt-4">
            <div class="col text-center">
                <button type="button" id="preview-button" class="btn btn-outline-secondary"><i class="bi bi-person-plus-fill"></i> Add</button>
            </div>
        </div>
    </form>
    <br />
    <hr />
    <table id="session-table" class="table table-bordered">
        <thead>
            <tr>
                <th>Trainee Name</th>
                <th>Trainer Name</th>
                <th>Topic</th>
                <th>Type</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
    <div class="col text-center">
        <button type="button" id="insert-button" class="btn btn-primary">Save</button>
        <a asp-controller="Session" asp-action="Index" class="btn btn-dark">Back to List</a>
    </div>



@section Scripts{
    @{
    <script type="text/javascript">
        $(document).ready(function () {
            var editingRow = null;

            function areInputFieldsEmpty() {
                return (
                    $("#traineeName").val() === '' ||
                    $("#trainerName").val() === '' ||
                    $("#topic").val() === '' ||
                    $("#type").val() === '' ||
                    $("#startDate").val() === '' ||
                    $("#endDate").val() === ''
                );
            }

            function getSelectedTopicName(selectedValue) {
                var selectedOption = $("#topic option[value='" + selectedValue + "']");
                return selectedOption.data("topic-name") || "Unknown";
            }

            var selectedValue = $("#topic").val();
            var selectedTopicName = getSelectedTopicName(selectedValue);

                $("#preview-button").click(function () {
                    if (areInputFieldsEmpty()) {
                        Swal.fire({
                            title: 'Error!',
                            text: 'Please fill in all fields before adding a row.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                        return;
                    }

                var traineeName = $("#traineeName").val();
                var selectedTrainer = $("#trainerName option:selected");
                var selectedTopic = $("#topic option:selected");
                var selectedType = $("#type option:selected");
                var startDate = $("#startDate").val();
                var endDate = $("#endDate").val();
                var editId = $("#edit-id").val();

                var trainer = {
                    Id: selectedTrainer.val(),
                    Name: selectedTrainer.text()
                };

                var topic = {
                    Id: selectedTopic.val(),
                    Name: selectedTopic.text()
                };

                var type = {
                    Id: selectedType.val(),
                    Name: selectedType.text()
                };

                if (editId === "-1") {
                    // Add new session
                    var newRow = '<tr>' +
                        '<td>' + traineeName + '</td>' +
                        '<td data-trainer-id="' + trainer.Id + '">' + trainer.Name + '</td>' +
                        '<td data-topic-id="' + topic.Id + '">' + topic.Name + '</td>' +
                        '<td data-type-id="' + type.Id + '">' + type.Name + '</td>' +
                        '<td>' + startDate + '</td>' +
                        '<td>' + endDate + '</td>' +
                        '<td>' +
                        '<button class="edit-row-button"><i class="bi bi-pencil"></i></button> ' +
                        '<button class="delete-row-button"><i class="bi bi-trash"></i></button>' +
                        '</td>' +
                        '</tr>';
                    $("#session-table tbody").append(newRow);
                } else {
                    // Edit existing session
                    var editingRow = $("#session-table tbody tr").eq(parseInt(editId));
                    $(editingRow).find("td:eq(0)").text(traineeName);
                    $(editingRow).find("td:eq(1)").data("trainer-id", trainer.Id).text(trainer.Name);
                    $(editingRow).find("td:eq(2)").data("topic-id", topic.Id).text(topic.Name);
                    $(editingRow).find("td:eq(3)").data("type-id", type.Id).text(type.Name);
                    $(editingRow).find("td:eq(4)").text(startDate);
                    $(editingRow).find("td:eq(5)").text(endDate);
                    $("#edit-id").val("-1");
                    $(editingRow).find(".edit-row-button").html('<i class="bi bi-pencil"></i>');
                }

                // Clear form
                $("#traineeName").val('');
                $("#trainerName").val('');
                $("#topic").val('');
                $("#type").val('');
                $("#startDate").val('');
                $("#endDate").val('');
            });

            // Delete row
            $("#session-table").on("click", ".delete-row-button", function () {
                $(this).closest("tr").remove();
            });

            // Edit row
            $("#session-table").on("click", ".edit-row-button", function () {
                editingRow = $(this).closest("tr");
                var traineeName = $(editingRow).find("td:eq(0)").text();
                var trainerName = $(editingRow).find("td:eq(1)").data("trainer-id");
                var topicId = $(editingRow).find("td:eq(2)").data("topic-id");
                var typeId = $(editingRow).find("td:eq(3)").data("type-id");
                var startDate = $(editingRow).find("td:eq(4)").text();
                var endDate = $(editingRow).find("td:eq(5)").text();

                // Set values for editing
                $("#traineeName").val(traineeName);
                $("#trainerName").val(trainerName);
                $("#topic").val(topicId);
                $("#type").val(typeId);
                $("#startDate").val(startDate);
                $("#endDate").val(endDate);
                $("#edit-id").val($(editingRow).index());
                $(this).html('<i class="bi bi-save"></i>');
            });

            // Insert session data
            $("#insert-button").click(function () {
                var sessionData = [];
                $("#session-table tbody tr").each(function () {
                    var traineeName = $(this).find("td:eq(0)").text();
                    var trainerName = $(this).find("td:eq(1)").data("trainer-id");
                    var topicId = $(this).find("td:eq(2)").data("topic-id");
                    var typeId = $(this).find("td:eq(3)").data("type-id");
                    var startDate = $(this).find("td:eq(4)").text();
                    var endDate = $(this).find("td:eq(5)").text();
                    var year = $("#year").val();

                    sessionData.push({
                        TraineeName: traineeName,
                        TrainerNameId: trainerName,
                        TrainingTopicId: topicId,
                        TrainingTypeId: typeId,
                        StartDate: startDate,
                        ExpectedEndDate: endDate,
                        Year: year
                    });
                });

                    // Check if there is data to insert
                    if (sessionData.length === 0) {
                        Swal.fire({
                            title: 'Error!',
                            text: 'No session data added.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                        return;
                    }

                // Send session via AJAX
                    $.ajax({
                        url: "/Session/Create",
                        method: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(sessionData),
                        success: function (response) {
                            Swal.fire({
                                title: 'Success!',
                                text: response.message,
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then(() => {
                                window.location.href = "/Session/Index";
                                $("#session-table tbody").empty();
                            });
                        },
                        error: function (xhr, status, error) {
                            Swal.fire({
                                title: 'Error!',
                                text: 'An error occurred while processing your request.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            }).then(() => {
                                console.error(xhr, status, error);
                            });
                        }
                    });

            });
        });
    </script>
    
                    
  <partial name="_ValidationScriptsPartial" />
                    }
}